name: 'Update Argon Releases'

on:
  push:
    branches: 
      - master
  schedule:
    - cron: '0/15 * * * *'
jobs:
  UpdateArgonReleases:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: 'Set up Python'
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: 'Install dependencies'
        run: python -m pip install --upgrade pip
      - name: 'Install requirements'
        run: pip install -r ./argon_release_update_py_requirements.txt
      - name: 'Working'
        timeout-minutes: 3
        run: bash ./argon_release_update.sh
        id: py
      - name: Commit files
        if: ${{ steps.py.outputs.hasNewVersionUpdate == 'true' }}
        run: |
          git config --local user.email "argontheme@outlook.com"
          git config --local user.name "argon-theme-release-push"
          git add -A
          git commit -m "Update Argon Release" -a
      - name: 'Push changes'
        if: ${{ steps.py.outputs.hasNewVersionUpdate == 'true' }}
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.TOKEN_ARGON_THEME_RELEASE_PUSH }}
      - name: 'Delete Old Release And Tag'
        if: ${{ steps.py.outputs.hasNewVersionUpdate == 'true' }}
        uses: solstice23/action-delete-latest-release@master
        with:
          github_token: ${{ secrets.TOKEN_ARGON_THEME_RELEASE_PUSH }}
      - name: 'Create a Release'
        if: ${{ steps.py.outputs.hasNewVersionUpdate == 'true' }}
        uses: elgohr/Github-Release-Action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_ARGON_THEME_RELEASE_PUSH }}
        with:
          args: ArgonRelease
